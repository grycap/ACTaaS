network publica (outbound = 'yes')
network privada ()

system front (
cpu.count>=1 and
memory.size>=2g and
net_interface.1.connection = 'publica' and
net_interface.0.connection = 'privada' and
net_interface.0.dns_name = 'jenkinserver' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.image.url = 'one://your.machine/id' and
disk.0.os.credentials.username = 'ubuntu' and
disk.0.os.credentials.password = 'pass'
)

system windows (
cpu.arch='x86_64' and
cpu.count>=2 and
memory.size>=4g and
net_interface.0.connection = 'privada' and
disk.0.os.name='windows' and
disk.0.image.url = 'one://your.machine/id' and
disk.0.os.credentials.username = 'winuser' and
disk.0.os.credentials.password = 'pass' and
net_interface.0.dns_name = 'entornopractico'
)

configure front (
@begin
- tasks:
  #Install java 8
  - name: Add java repository to ub14
    apt_repository:
      repo: 'ppa:openjdk-r/ppa'
    when: ansible_os_family == "Debian" and ansible_distribution_major_version == "14"

  - name: Ensure Java is installed
    apt: name=openjdk-8-jre-headless state=present update_cache=yes

  - name: Select java version 8 (Problems with java 9,10 and 12 in jenkins)
    alternatives:
      name: java
      path: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java

  #Install Jenkins (https://jenkins.io/doc/book/installing/)
  - name: Add Jenkins apt repository key.
    apt_key:
      url: "https://pkg.jenkins.io/debian/jenkins.io.key"
      state: present

  - name: Add Jenkins apt repository.
    apt_repository:
      repo: "deb https://pkg.jenkins.io/debian-stable binary/"
      state: present
      update_cache: true
    when: ansible_os_family == "Debian"

  - name: apt update
    shell: apt-get update
    args:
      warn: false
    when: ansible_os_family == "Debian"

  - name: solve error installing Jenkins
    shell: add-apt-repository universe
    when: ansible_os_family == "Debian"

  - name: Install Jenkins
    shell: apt-get install -y --allow-unauthenticated --no-upgrade jenkins
    args:
      warn: false
    when: ansible_os_family == "Debian"

  - name: Install gcc
    shell: apt-get install -y build-essential
    args:
      warn: false
    when: ansible_os_family == "Debian"

  - name: Install bc calculator
    shell: apt-get install -y bc
    args:
      warn: false
    when: ansible_os_family == "Debian"

  # Install Autoasssesment scrips from Github
  - name: Install Autoasssesment scrips from Github
    git:
      repo: https://github.com/grycap/ACTaaS
      dest: /var/tmp/education/ACTaaS
      version: master

  - name: Set permisions for unittest scripts
    file:
      path: /var/tmp/education/ACTaaS/practices/P1/Face/unittests
      state: directory
      recurse: yes
      owner: root
      group: root
      mode: '0777'

  - name: Set permisions for unittest directory
    file:
      path: /var/tmp/education/ACTaaS/practices/P1/Face/unittests
      state: directory
      mode: '0755'
@end
)

configure windows (
@begin
---
- tasks:
  - name: install github desktop via Chocolatey
    win_chocolatey:
      name: github-desktop
      state: present

  - name: install Dev-C++ via Chocolatey
    win_chocolatey:
      name: orwelldevcpp
      state: present

  #- name: download dev-c++
  #  win_get_url: 
  #    url: https://downloads.sourceforge.net/project/orwelldevcpp/Setup%20Releases/Dev-Cpp%205.11%20TDM-GCC%204.9.2%20Setup.exe?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Forwelldevcpp%2Ffiles%2Flatest%2Fdownload&ts=1551280148
  #    url: https://sourceforge.net/projects/orwelldevcpp/files/latest/download
  #    dest: C:\Users\Public\Desktop\Dev-Cpp-5.11-TDM-GCC-4.9.2-Setup.exe

  #- name: install dev-c++
  #  win_package:
  #    path: C:\Users\Public\Desktop\Dev-Cpp-5.11-TDM-GCC-4.9.2-Setup.exe
  #    state: present

  - name: update machine name to 'entornopractico'
    win_hostname:
      name: entornopractico
    register: hostname_state

  - win_reboot:
    when: hostname_state.reboot_required

  - win_group:
      name: WORKGROUP
      state: absent

  #Configure internal UPV domain
  - win_domain_membership:
      dns_domain_name: UPVNET.UPV.ES
      domain_admin_user: 'agregar'
      domain_admin_password: 'agregar'
      domain_ou_path: "OU=Windows,OU=Servers,DC=UPVNET,DC=UPV,DC=ES"
      state: domain
    register: domain_state

  - win_reboot:
    when: domain_state.reboot_required

@end
)

deploy front 1
# You can modify this value to add more windows machines
deploy windows 5
